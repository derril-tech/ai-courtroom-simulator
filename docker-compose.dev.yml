version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: courtroom_simulator_postgres
    environment:
      POSTGRES_DB: courtroom_simulator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d courtroom_simulator" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: courtroom_simulator_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # NATS Message Broker
  nats:
    image: nats:2.9-alpine
    container_name: courtroom_simulator_nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: nats-server --jetstream --http_port 8222
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8222/healthz" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: courtroom_simulator_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  # Frontend (Next.js)
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    container_name: courtroom_simulator_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    depends_on:
      - gateway
    profiles:
      - frontend

  # Gateway (NestJS)
  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile.dev
    container_name: courtroom_simulator_gateway
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/courtroom_simulator
      - REDIS_URL=redis://redis:6379/0
      - NATS_URL=nats://nats:4222
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./apps/gateway:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    profiles:
      - backend

  # Orchestrator (FastAPI)
  orchestrator:
    build:
      context: ./apps/orchestrator
      dockerfile: Dockerfile.dev
    container_name: courtroom_simulator_orchestrator
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/courtroom_simulator
      - REDIS_URL=redis://redis:6379/0
      - NATS_URL=nats://nats:4222
      - S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET=courtroom-simulator
    volumes:
      - ./apps/orchestrator:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      minio:
        condition: service_healthy
    profiles:
      - backend

  # Workers (Celery)
  workers:
    build:
      context: ./apps/workers
      dockerfile: Dockerfile.dev
    container_name: courtroom_simulator_workers
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/courtroom_simulator
      - REDIS_URL=redis://redis:6379/0
      - NATS_URL=nats://nats:4222
      - S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET=courtroom-simulator
    volumes:
      - ./apps/workers:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      minio:
        condition: service_healthy
    profiles:
      - backend

volumes:
  postgres_data:
  redis_data:
  minio_data:
